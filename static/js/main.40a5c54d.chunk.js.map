{"version":3,"sources":["maxmilhas.png","components/Countdown.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CountdownDisplay","props","years","months","days","asDays","hours","minutes","seconds","react_default","a","createElement","className","datetime","concat","String","padStart","Countdown","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","now","Date","_this2","intervalId","setInterval","setState","intervalDelay","clearInterval","delta","toDate","Countdown_CountdownDisplay","Math","floor","milliseconds","React","Component","defaultProps","App","xmlns","viewBox","id","data-name","class","d","Countdown_Countdown","src","logo","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40a5c54d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/maxmilhas.564df194.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Countdown.css';\n\nconst CountdownDisplay = props => {\n  const { years, months, days, asDays, hours, minutes, seconds } = props;\n\n  return (\n    <div>\n      <p>\n        Já estamos em contagem regressiva...\n      </p>\n      <time\n        className=\"CountdownDisplay\"\n        datetime={`P${asDays}DT${hours}H${minutes}M${seconds}S`}\n      >\n        <div className=\"CountdownDisplay__days\">\n          <h3>{String(asDays).padStart(2, 0)}</h3>\n          <span>dias</span>\n        </div>\n        <div className=\"CountdownDisplay__hours\">\n          <h3>{String(hours).padStart(2, 0)}</h3>\n          <span>horas</span>\n        </div>\n        <div className=\"CountdownDisplay__minutes\">\n          <h3>{String(minutes).padStart(2, 0)}</h3>\n          <span>minutos</span>\n        </div>\n        <div className=\"CountdownDisplay__seconds\">\n          <h3>{String(seconds).padStart(2, 0)}</h3>\n          <span>segundos</span>\n        </div>\n      </time>\n    </div>\n  );\n};\n\nCountdownDisplay.propTypes = {\n  years: PropTypes.number.isRequired,\n  months: PropTypes.number.isRequired,\n  days: PropTypes.number.isRequired,\n  asDays: PropTypes.number.isRequired,\n  hours: PropTypes.number.isRequired,\n  minutes: PropTypes.number.isRequired,\n  seconds: PropTypes.number.isRequired,\n};\n\nexport default class Countdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      now: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.intervalId = setInterval(() => {\n      this.setState({\n        now: new Date()\n      });\n    }, this.props.intervalDelay);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    const {\n      now\n    } = this.state;\n    const {\n      toDate\n    } = this.props;\n    const delta = toDate - now;\n    if (delta <  0) {\n      return <div className=\"CountdownDisplay\">\n        <h3>Já começou!</h3>\n      </div>;\n    };\n\n    return <CountdownDisplay \n      years={Math.floor(delta / 1000 / 60 / 60 / 24 / 30 / 12)}\n      months={Math.floor((delta / 1000 / 60 / 60 / 24 / 30) % 12)}\n      days={Math.floor((delta / 1000 / 60 / 60 / 24) % 30)}\n      hours={Math.floor((delta / 1000 / 60 / 60) % 24)}\n      minutes={Math.floor((delta / 1000 / 60) % 60)}\n      seconds={Math.floor((delta / 1000) % 60)}\n      milliseconds={delta}\n      asDays={Math.floor(delta / 1000 / 60 / 60 / 24)}\n    />;\n  }\n}\n\nCountdown.propTypes = {\n  toDate: PropTypes.instanceOf(Date).isRequired,\n  intervalDelay: PropTypes.number\n};\n\nCountdown.defaultProps = {\n  intervalDelay: 1000\n};","import React from 'react';\nimport './App.css';\nimport logo from './maxmilhas.png';\nimport Countdown from './components/Countdown';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"stopover__logo\" viewBox=\"0 0 534.11 99.08\">\n          <g id=\"Layer_2\" data-name=\"Layer 2\">\n            <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n              <path class=\"white\" d=\"M34.59,70.11c-13.74,0-25.87-4-34.16-11.27A1.25,1.25,0,0,1,.3,57.08L11.9,43.25a1.25,1.25,0,0,1,1.73-.19,36,36,0,0,0,22,7.35c1.61,0,4.31-.2,4.31-1.52V48.7c0-1-2.39-1.91-8-3-13.74-2.8-28.4-7.05-28.4-22.13v-.18C3.53,9.28,14.85.19,32.36.19,45,.19,54.55,3.1,62.48,9.37a1.26,1.26,0,0,1,.24,1.73L52.14,25.77a1.28,1.28,0,0,1-1.77.28,32.57,32.57,0,0,0-18.75-6.17c-.82,0-3.47.11-3.47,1.43v.19c0,.7.86,1.66,7.6,2.94,15,2.75,28.79,7.35,28.79,22.22v.18A20.72,20.72,0,0,1,56.24,64C51,68,43.47,70.11,34.59,70.11ZM3,57.74c7.8,6.36,19,9.85,31.56,9.85,16.92,0,27.43-8,27.43-20.75v-.18c0-12.3-10.69-16.79-26.73-19.74-6.41-1.22-9.67-2.39-9.67-5.42v-.19c0-.92.44-3.95,6-3.95a35.26,35.26,0,0,1,19.2,5.92L60,10.62c-7.28-5.39-16.09-7.91-27.6-7.91-16,0-26.31,8.1-26.31,20.65v.18c0,11.89,10.09,16.34,26.38,19.66,6.92,1.38,10,2.5,10,5.5v.19c0,3.34-3.71,4-6.83,4a38.46,38.46,0,0,1-22.54-7.15Z\"/>\n              <path class=\"white\" d=\"M107.1,68.9H85.37a1.26,1.26,0,0,1-1.26-1.26V22.3H66.25A1.26,1.26,0,0,1,65,21V2.65a1.26,1.26,0,0,1,1.26-1.26h60a1.26,1.26,0,0,1,1.26,1.26V21a1.26,1.26,0,0,1-1.26,1.26H108.36V67.64A1.26,1.26,0,0,1,107.1,68.9ZM86.63,66.38h19.21V21a1.26,1.26,0,0,1,1.26-1.27H125V3.91H67.51V19.77H85.37A1.26,1.26,0,0,1,86.63,21Z\"/>\n              <path class=\"white\" d=\"M165,70.29c-20.54,0-36.63-15.35-36.63-35v-.18C128.4,15.44,144.57,0,165.22,0s36.63,15.36,36.63,35v.19C201.85,54.86,185.68,70.29,165,70.29Zm.19-67.77c-19.24,0-34.3,14.33-34.3,32.63v.18c0,18.19,15,32.44,34.11,32.44s34.3-14.33,34.3-32.62V35C199.33,16.77,184.34,2.52,165.22,2.52Zm0,48.56c-8.5,0-14.91-6.85-14.91-15.93V35c0-9,6.33-15.74,14.72-15.74s14.91,6.85,14.91,15.93v.18C179.94,44.31,173.61,51.08,165.22,51.08ZM165,21.74c-7.92,0-12.2,6.81-12.2,13.22v.19c0,6.5,4.34,13.4,12.39,13.4s12.2-6.81,12.2-13.22v-.18C177.42,28.65,173.08,21.74,165,21.74Z\"/>\n              <path class=\"white\" d=\"M231,68.9H209.32a1.26,1.26,0,0,1-1.27-1.26v-65a1.27,1.27,0,0,1,1.27-1.26h29.24c19,0,30.32,9.12,30.32,24.38V26c0,7.93-3,14.47-8.67,18.9-5.37,4.19-13,6.4-22.11,6.4h-5.8V67.64A1.25,1.25,0,0,1,231,68.9Zm-20.46-2.52h19.2V50A1.25,1.25,0,0,1,231,48.74h7.06c17.69,0,28.26-8.52,28.26-22.78v-.19c0-13.89-10.13-21.86-27.8-21.86h-28Zm26.31-30.62H231a1.26,1.26,0,0,1-1.26-1.26V20A1.26,1.26,0,0,1,231,18.75H237c6.64,0,10.45,3.07,10.45,8.41v.19C247.43,32.54,243.39,35.76,236.89,35.76Zm-4.59-2.52h4.59c2.41,0,8-.58,8-5.89v-.19c0-4.86-4.31-5.88-7.93-5.88H232.3Z\"/>\n              <path class=\"white\" d=\"M257,35.44v-.19C257,15.86,272.92.38,293.56.38S330,15.67,330,35.06v.19c0,19.39-16,34.87-36.59,34.87S257,54.83,257,35.44Zm50.44,0v-.19c0-7.93-5.45-15.09-14-15.09s-13.86,7.06-13.86,14.9v.19c0,7.93,5.45,15.09,14.05,15.09S307.41,43.27,307.41,35.44Z\"/>\n              <path class=\"white\" d=\"M326.9,1.81h25l13,37.55,13-37.55h24.65L375.43,69.16H354Z\"/>\n              <path class=\"white\" d=\"M405.33,1.81h57V20.16H427.3v6.78H460V43.08H427.3v7.26h35.54V68.69H405.33Z\"/>\n              <path class=\"white\" d=\"M468.86,1.81h32.67c11.85,0,19.39,3,24.08,7.65,4,4,6.11,9,6.11,15.85v.2c0,9.74-5.06,16.52-13.18,20.44l15.57,22.74H508.6L496,49.58h-4.78V68.69H468.86Zm32,31.82c5.35,0,8.6-2.39,8.6-6.5v-.19c0-4.3-3.34-6.4-8.5-6.4h-9.75V33.63Z\"/>\n              <path class=\"white\" d=\"M191.38,86.05h2.12l7,9v-9h2.26v13h-1.92l-7.19-9.27v9.27h-2.25Z\"/>\n              <path class=\"white\" d=\"M225.61,86h2.12l5.74,13.13h-2.42l-1.32-3.14h-6.17l-1.34,3.14h-2.35Zm3.28,8-2.25-5.22-2.24,5.22Z\"/>\n              <path class=\"white\" d=\"M271.1,86.05h2.44l4,6.16,4-6.16h2.44v13h-2.29V89.73l-4.12,6.15h-.07l-4.08-6.11v9.31H271.1Z\"/>\n              <path class=\"white\" d=\"M306.78,86h2.13l5.73,13.13h-2.42l-1.32-3.14h-6.17l-1.34,3.14h-2.34Zm3.28,8-2.25-5.22-2.24,5.22Z\"/>\n              <path class=\"white\" d=\"M335.28,92.45l-4.56-6.4h2.7l3.24,4.67,3.26-4.67h2.63L338,92.42l4.73,6.66H340l-3.43-4.93-3.44,4.93h-2.63Z\"/>\n            </g>\n          </g>\n        </svg>\n        <Countdown toDate={new Date(2019, 5, 25, 18, 30)}/>\n        <h3 className=\"date\">\n          <span className=\"desc\">25 de junho</span>, <span className=\"hour\">6:30 PM</span>\n        </h3>\n        <img src={logo} className=\"maxmilhas__logo\"/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}